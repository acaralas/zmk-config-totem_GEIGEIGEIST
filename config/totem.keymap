//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NUM  1
#define NAV  2
#define FNC  3

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_caps_word_l {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&caps_word>;
            layers = <0>;
        };

        combo_caps_word_r {
            timeout-ms = <50>;
            key-positions = <29 30>;
            bindings = <&caps_word>;
            layers = <0>;
        };

        combo_cro_sh {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LBKT>;
            layers = <0>;
        };

        combo_cro_dj {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp RBKT>;
            layers = <0>;
        };

        combo_cro_zh {
            timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&kp BSLH>;
            layers = <0>;
        };

        combo_cro_ch {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp SEMI>;
            layers = <0>;
        };

        // combo_ctrl_alt pa se onda pozvat na nju ctrl_alt(K)
        // BRACKETS "[" & "]"

        combo_lbkt {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp RA(F)>;
            layers = <0>;
        };

        combo_rbkt {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp RA(G)>;
            layers = <0>;
        };

        // PARENTESIS "(" & ")"

        combo_lpar {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp LS(N8)>;
            layers = <0>;
        };

        combo_rpar {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp LS(N9)>;
            layers = <0>;
        };

        // BRACES "{" & "}"

        combo_lbrc {
            timeout-ms = <200>;
            key-positions = <6 7 21 22>;
            bindings = <&kp RA(B)>;
            layers = <0>;
        };

        combo_rbrc {
            timeout-ms = <200>;
            key-positions = <7 8 21 22>;
            bindings = <&kp RA(N)>;
            layers = <0>;
        };

        // QUOTE, DOUBLE "

        combo_dquote {
            timeout-ms = <200>;
            key-positions = <16 17 21 22>;
            bindings = <&kp RS(N2)>;
            layers = <0>;
        };

        // QUOTE, SINGLE '

        combo_squote {
            timeout-ms = <200>;
            key-positions = <17 18 21 22>;
            bindings = <&kp LS(MINUS)>;
            layers = <0>;
        };

        combo_num_12 {
            bindings = <&kp RA(N1)>;
            key-positions = <1 2>;
            timeout-ms = <50>;
            layers = <1>;
        };

        combo_num_23 {
            bindings = <&kp RA(N3)>;
            key-positions = <2 3>;
            timeout-ms = <50>;
            layers = <1>;
        };

        combo_num_34 {
            bindings = <&kp LS(N3)>;
            key-positions = <3 4>;
            timeout-ms = <50>;
            layers = <1>;
        };

        combo_num_56 {
            bindings = <&kp RA(RIGHT_BRACKET)>;
            key-positions = <5 6>;
            timeout-ms = <50>;
            layers = <1>;
        };

        combo_num_67 {
            bindings = <&kp LS(N8)>;
            key-positions = <6 7>;
            timeout-ms = <50>;
            layers = <1>;
        };

        combo_num_78 {
            bindings = <&kp LS(N9)>;
            key-positions = <7 8>;
            timeout-ms = <50>;
            layers = <1>;
        };

        combo_num_1617 {
            bindings = <&kp BACKSLASH>;
            key-positions = <16 17>;
            timeout-ms = <50>;
            layers = <1>;
        };

        combo_num_1718 {
            bindings = <&kp LS(BACKSLASH)>;
            key-positions = <17 18>;
            timeout-ms = <50>;
            layers = <1>;
        };

        combo_num_2627 {
            bindings = <&kp RA(LEFT_BRACKET)>;
            key-positions = <26 27>;
            timeout-ms = <50>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q   [ESC]   W     ┃     E     ┃     R     ┃     T     ┃   ┃     Z    [Ž]    U   ["["]   I   ["]"]   O     ┃     P     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A   [TAB]   S    [Š]    D    [Đ]    F     ┃     G     ┃   ┃     H     ┃     J   ["("]   K   [")"]   L    [Č]    Ć     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     -     ┃     Y   [SHF]   X   [CTL]   C   [WIN]   V   [ALT]   B     ┃   ┃     N   [ALT]   M   [WIN]   ,   [CTL]   .   [SHF]   -     ┃     -     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃   ENTER   ┃   NUM_LY  ┃   ┃ BACKSPACE ┃   SPACE   ┃  NAV_LY   ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
           &kp Q  &kp W  &kp E    &kp R    &kp T            &kp Y     &kp U      &kp I      &kp O    &kp P
           &mt LSHFT A  &mt LCTRL S  &mt LALT D    &mt LGUI F    &kp G            &kp H     &mt RGUI J      &mt RALT K      &mt RCTRL L    &mt RSHFT SQT
&kp LSHFT  &kp Z  &kp X  &kp C    &kp V    &kp B            &kp N     &kp M      &kp COMMA  &kp DOT  &kp KP_MINUS  &kp RSHFT
                         &kp DEL  &kp RET  &lt NUM TAB      &kp BSPC  &kp SPACE  &mo 2
            >;

            //                                    &kp DEL &lt NAV TAB  &kp SPACE    &kp RET  &lt SYM ESC  &kp BSPC            
        };

        num_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "NUM";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃           ┃           ┃     UP    ┃           ┃     {     ┃   ┃     }     ┃     7     ┃     8     ┃     9     ┃     +     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃   SHIFT   ┃   LEFT    ┃    DOWN   ┃   RIGHT   ┃     [     ┃   ┃     ]     ┃     4     ┃     5     ┃     6     ┃     -     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃   P UP    ┃  C LOCK   ┃  P DOWN   ┃     (     ┃   ┃     )     ┃     1     ┃     2     ┃     3     ┃     *     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    TAB    ┃    SPC    ┃   ┃    DEL    ┃     0     ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
        &kp RA(Q)  &kp RA(W)   &kp RA(E)      &kp LS(N4)  &kp RA(N5)    &kp LS(EQUAL)  &kp N7  &kp N8  &kp N9  &kp EQUAL
        &none      &kp LS(N5)  &kp LS(MINUS)  &kp LS(N1)  &kp LS(N6)    &kp LS(N0)     &kp N4  &kp N5  &kp N6  &kp COMMA
&trans  &none      &none       &none          &kp RA(V)   &none         &kp LS(N7)     &kp N1  &kp N2  &kp N3  &kp KP_MINUS  &trans
                               &trans         &trans      &trans        &trans         &trans  &kp N0
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
        &none  &none      &none      &none      &none        &kp INSERT       &kp PG_UP  &kp UP_ARROW    &none      &none
        &none  &none      &none      &none      &none        &kp HOME         &kp LEFT   &kp DOWN_ARROW  &kp RIGHT  &kp END
&trans  &none  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LG(V)    &kp PRINTSCREEN  &kp PG_DN  &none           &none      &none    &trans
                          &trans     &trans     &mo 3        &trans           &trans     &trans
            >;
        };

        function_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "FNC";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃   RESET   ┃ BT CLEAR  ┃  OUT TOG  ┃           ┃           ┃   ┃           ┃    F7     ┃    F8     ┃    F9     ┃    F12    ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃ BOOTLOAD  ┃ BT NEXT   ┃           ┃           ┃           ┃   ┃           ┃    F4     ┃    F5     ┃    F6     ┃    F11    ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃ BT PREV   ┃           ┃           ┃           ┃   ┃           ┃    F1     ┃    F2     ┃    F3     ┃    F10    ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &kp C_VOLUME_UP      &kp C_PREV        &kp F7  &kp F8  &kp F9  &kp F12
        &bt BT_PRV    &bt BT_NXT    &trans        &trans  &kp C_MUTE           &kp C_PLAY_PAUSE  &kp F4  &kp F5  &kp F6  &kp F11
&trans  &bootloader   &sys_reset    &trans        &trans  &kp C_VOLUME_DOWN    &kp C_NEXT        &kp F1  &kp F2  &kp F3  &kp F10  &trans
                                    &trans        &trans  &trans               &trans            &trans  &trans
            >;
        };
    };
};
